const assert = require('assert')
const { flagToCountry, getFlagsInText } = require('../index')

describe('Tests for emoji flags to country code', () => {
  it('should return undefined for empty inputs', () => {
    assert.strictEqual(flagToCountry(''), undefined)
    assert.strictEqual(flagToCountry(null), undefined)
    assert.strictEqual(flagToCountry(undefined), undefined)
  })
  it('should return undefined for any character that is not a flag emoji', () => {
    assert.strictEqual(flagToCountry('hello world'), undefined)
    assert.strictEqual(flagToCountry('US'), undefined)
    assert.strictEqual(flagToCountry('ğŸ˜€'), undefined)
  })
  it('should return the correct country code for a given emoji flag', () => {
    assert.strictEqual(flagToCountry('ğŸ‡®ğŸ‡¹'), 'IT')
    assert.strictEqual(flagToCountry('ğŸ‡ºğŸ‡¸'), 'US')
    assert.strictEqual(flagToCountry('ğŸ‡ªğŸ‡¸'), 'ES')
    assert.strictEqual(flagToCountry('ğŸ‡ªğŸ‡º'), 'EU')
  })
  it('should return an empty array for an invalid text', () => {
    assert.deepEqual(getFlagsInText(''), [])
    assert.deepEqual(getFlagsInText(null), [])
    assert.deepEqual(getFlagsInText(undefined), [])
  })
  it('should return an empty array for a text with no emoji flags', () => {
    assert.deepEqual(getFlagsInText('This text has no emoji flags ğŸ˜€'), [])
  })
  it('should return an array of emoji flags for a text with emoji flags', () => {
    assert.deepEqual(getFlagsInText('Italians do it better ğŸ‡®ğŸ‡¹'), ['ğŸ‡®ğŸ‡¹'])
    assert.deepEqual(getFlagsInText('ğŸ‡®ğŸ‡¹ some flag ğŸ‡ºğŸ‡¸ here and thereğŸ‡ªğŸ‡¸ and also ğŸ‡ªğŸ‡º'), ['ğŸ‡®ğŸ‡¹', 'ğŸ‡ºğŸ‡¸', 'ğŸ‡ªğŸ‡¸', 'ğŸ‡ªğŸ‡º'])
  })
})
